Importing class from the module:
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

>>> bg = BaseGeometry()
>>> bg.integer_validator("name", -1)
Traceback (most recent call last):
    ...
ValueError: name must be greater than 0


>>> bg = BaseGeometry()
>>> bg.integer_validator("age", {8, 19})
Traceback (most recent call last):
              ...
TypeError: age must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("name", "1")
Traceback (most recent call last):
    ...
TypeError: name must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
    	      ...
TypeError: age must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", {2, 1})
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator()
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'